https://www.geeksforgeeks.org/how-to-make-javascript-wait-for-a-api-request-to-return/
https://medium.com/@armando_amador/how-to-make-http-requests-using-fetch-api-and-promises-b0ca7370a444
https://developers.google.com/web/fundamentals/primers/async-functions#top_of_page
function HTTP_ROUTE__fetchBasic(path){
    fetch(path).then(function (response) {
		if (response.ok) {
            console.log(response.text());
			return response.text();
		} else {
			var error = new Error(response.statusText);
			error.response = response;
			throw error;
		}
	});
} 
function HTTP_REQUEST__fetchBasicTwo(path){
    return fetch(path)
		.then((response) => response.text())
		.then((text) => {
			console.log(text);
        }).catch(err => {
            console.error('fetch failed', err);
        });
}
function HTTP_ROUTE__fetchPromise(path) {
	return new Promise((resolve, reject) => {
		fetch(path).then(
			(response) => {
				resolve(response.text());
			},
			(error) => {
				reject(error);
			}
		);
	});
}
async function HTTP_ROUTE__fetchAsync(path) {
    try {
		const response = await fetch(path);
		console.log(await response.text());
	} catch (err) {
		console.error("fetch failed", err);
	}
}

function javascript_promise(){
    let prom = new Promise((resolve, reject) => {
        let a = 1 + 2;
        if(a == 3){
            resolve("true")
        }
        else{
            reject("false");
        }
    });
    prom.then((message) => {
        console.log("This is correct");
    }).catch((message) => {
        console.log("This is incorrect");
    });
}



//check if username exists in the system
            const usernameExists = HTTP_ROUTE__returnFetchAsPromise(`/uniqueUsername/:${user_username}`);

            usernameExists.then((response) => {
                if(response == "username--exists"){
                    // check if username and password are correct
                    const accountExists = HTTP_ROUTE__returnFetchAsPromise(
                        `/verifyCredentials/:${user_username}/:${user_password}`
                    );

                    accountExists.then((response) => {
                        // if http request is successfull, check if a valid user and password was found on the database
                        if (response == "credentials--correct") {
                            var usernameCookie = getCookie("username");
                            var passwordCookie = getCookie("password");

                            // if no cookie for the user was found, create one
                            if (usernameCookie == null || passwordCookie == null) {
                                createCookie("username", user_username, 1000);
                                createCookie("password", user_password, 1000);
                            }

                        } else {
                            // let the user know that they have entered a wrong username or password
                            console.log("Password entered is incorrect");
                        }

                    })
                    .catch((error) => {
                        console.log(error);
                        console.log("There was an error in trying to verify your user account information");
                    });
                    
                }
                else {
                    console.log("username does not exists");
                }
			}).catch((error) => {
                console.log("there was an error when trying to determine if the username entered is in the database");
			});